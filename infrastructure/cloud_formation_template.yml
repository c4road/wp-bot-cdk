Transform: AWS::Serverless-2016-10-31
AWSTemplateFormatVersion: "2010-09-09"
Resources:
  DefaultRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: ""
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:*:logs:*:*:*
          PolicyName: DefaultRolePolicy
  APIHandler:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri:
        Bucket:
          Ref: AssetParameters0989887a9aa35f0803c5cfcb6ace9c5addbe7a1cc040b39e84449f80ee07745fS3BucketBE663E6C
        Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters0989887a9aa35f0803c5cfcb6ace9c5addbe7a1cc040b39e84449f80ee07745fS3VersionKeyD603DF52
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters0989887a9aa35f0803c5cfcb6ace9c5addbe7a1cc040b39e84449f80ee07745fS3VersionKeyD603DF52
      Handler: app.app
      MemorySize: 128
      Role:
        Fn::GetAtt:
          - DefaultRole
          - Arn
      Runtime: python3.8
      Tags:
        aws-chalice: version=1.26.2:stage=wp-bot-cdk:app=wp-bot-cdk
      Timeout: 60
      Tracing: PassThrough
  RestAPI:
    Type: AWS::Serverless::Api
    Properties:
      StageName: api
      DefinitionBody:
        swagger: "2.0"
        info:
          version: "1.0"
          title: wp-bot-platform
        schemes:
          - https
        paths:
          /ping:
            get:
              consumes:
                - application/json
              produces:
                - application/json
              responses:
                "200":
                  description: 200 response
                  schema:
                    $ref: "#/definitions/Empty"
              x-amazon-apigateway-integration:
                responses:
                  default:
                    statusCode: "200"
                uri:
                  Fn::Sub: arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations
                passthroughBehavior: when_no_match
                httpMethod: POST
                contentHandling: CONVERT_TO_TEXT
                type: aws_proxy
          "/coin/{coin}":
            get:
              consumes:
                - application/json
              produces:
                - application/json
              responses:
                "200":
                  description: 200 response
                  schema:
                    $ref: "#/definitions/Empty"
              x-amazon-apigateway-integration:
                responses:
                  default:
                    statusCode: "200"
                uri:
                  Fn::Sub: arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations
                passthroughBehavior: when_no_match
                httpMethod: POST
                contentHandling: CONVERT_TO_TEXT
                type: aws_proxy
              parameters:
                - name: coin
                  in: path
                  required: true
                  type: string
          /whatsapp/ack:
            post:
              consumes:
                - application/x-www-form-urlencoded
              produces:
                - application/json
              responses:
                "200":
                  description: 200 response
                  schema:
                    $ref: "#/definitions/Empty"
              x-amazon-apigateway-integration:
                responses:
                  default:
                    statusCode: "200"
                uri:
                  Fn::Sub: arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations
                passthroughBehavior: when_no_match
                httpMethod: POST
                contentHandling: CONVERT_TO_TEXT
                type: aws_proxy
        definitions:
          Empty:
            type: object
            title: Empty Schema
        x-amazon-apigateway-binary-media-types:
          - application/octet-stream
          - application/x-tar
          - application/zip
          - audio/basic
          - audio/ogg
          - audio/mp4
          - audio/mpeg
          - audio/wav
          - audio/webm
          - image/png
          - image/jpg
          - image/jpeg
          - image/gif
          - video/ogg
          - video/mpeg
          - video/webm
      EndpointConfiguration: EDGE
  APIHandlerInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Ref: APIHandler
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Sub:
          - arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${RestAPIId}/*
          - RestAPIId:
              Ref: RestAPI
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/yWMQW7CQAxFz8J+YhqyKMsCEhKrRnACM2Oom8wMGntUoSh3bwwrv//1/Vpou0/4WH3hnzQ+DOvJ50IwXRT94A45iZbq1e1ESJfyzunuDrf0XfVR1ajHgpGUioUzSa7Fk/HyHFg5p9mZfJKuQbMIvGROOthXP5DuUcgxRjBBHsnJwtMSjjV5E5ht9+DZjRivAW3XU4ks8rL7MddwyyWijRtOfqyBbHV64+z6p/7ktO5gC+1m9SvMTalJORKc3/cfe2yt7AkBAAA=
    Metadata:
      aws:cdk:path: wp-bot-cdk/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  RestAPIId:
    Value:
      Ref: RestAPI
  APIHandlerName:
    Value:
      Ref: APIHandler
  APIHandlerArn:
    Value:
      Fn::GetAtt:
        - APIHandler
        - Arn
  EndpointURL:
    Value:
      Fn::Sub: https://${RestAPI}.execute-api.${AWS::Region}.${AWS::URLSuffix}/api/
Parameters:
  AssetParameters0989887a9aa35f0803c5cfcb6ace9c5addbe7a1cc040b39e84449f80ee07745fS3BucketBE663E6C:
    Type: String
    Description: S3 bucket for asset "0989887a9aa35f0803c5cfcb6ace9c5addbe7a1cc040b39e84449f80ee07745f"
  AssetParameters0989887a9aa35f0803c5cfcb6ace9c5addbe7a1cc040b39e84449f80ee07745fS3VersionKeyD603DF52:
    Type: String
    Description: S3 key for asset version "0989887a9aa35f0803c5cfcb6ace9c5addbe7a1cc040b39e84449f80ee07745f"
  AssetParameters0989887a9aa35f0803c5cfcb6ace9c5addbe7a1cc040b39e84449f80ee07745fArtifactHashC6F6CC4C:
    Type: String
    Description: Artifact hash for asset "0989887a9aa35f0803c5cfcb6ace9c5addbe7a1cc040b39e84449f80ee07745f"
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

